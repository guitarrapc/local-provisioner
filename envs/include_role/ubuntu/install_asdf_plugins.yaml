# https://asdf-vm.com/guide/getting-started.html#_6-set-a-version
- name: "asdf_plugin ({{ args.name }}) - check plugin installed and update"
  ansible.builtin.command: "asdf plugin update {{ args.name }} 2>&1"
  args:
    executable: /bin/bash
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    PATH: "{{ ansible_home }}/.asdf/shims:{{ ansible_home }}/.asdf/bin:{{ ansible_env.PATH }}"
  register: asdf_plugin_exists
  changed_when: false
  ignore_errors: true

- name: "asdf_plugin ({{ args.name }}) - install plugin"
  ansible.builtin.command: "asdf plugin add {{ args.name }} {{ args.source }}"
  args:
    executable: /bin/bash
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    PATH: "{{ ansible_home }}/.asdf/shims:{{ ansible_home }}/.asdf/bin:{{ ansible_env.PATH }}"
  register: asdf_plugin_install
  changed_when: asdf_plugin_install.rc != 0
  when: asdf_plugin_exists is failed

- name: "asdf_plugin ({{ args.name }}) - install version ({{ args.version }})"
  ansible.builtin.command: "asdf install {{ args.name }} {{ args.version }}"
  args:
    executable: /bin/bash
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    PATH: "{{ ansible_home }}/.asdf/shims:{{ ansible_home }}/.asdf/bin:{{ ansible_env.PATH }}"
  register: asdf_plugin_install_version
  changed_when: asdf_plugin_install_version.rc != 0

- name: "asdf_plugin ({{ args.name }}) - set global version ({{ args.version }})"
  ansible.builtin.command: "asdf global {{ args.name }} {{ args.version }}"
  args:
    executable: /bin/bash
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    PATH: "{{ ansible_home }}/.asdf/shims:{{ ansible_home }}/.asdf/bin:{{ ansible_env.PATH }}"
  register: asdf_plugin_global_version
  changed_when: asdf_plugin_global_version.rc != 0
