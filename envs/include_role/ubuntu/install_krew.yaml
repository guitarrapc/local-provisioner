---
# prepare
- name: "krew - get os"
  shell: uname | tr '[:upper:]' '[:lower:]'
  register: os_value
  changed_when: false
  check_mode: no
- name: "krew - register os"
  set_fact: ansible_os='{{ os_value.stdout }}'
- name: "krew - get arch"
  shell: uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/'
  register: arch_value
  changed_when: false
  check_mode: no
- name: "krew - register arch"
  set_fact: ansible_arch='{{ arch_value.stdout }}'
- name: "krew - debug ansible_os"
  debug:
    msg: "{{ ansible_os }}"
- name: "krew - debug ansible_arch"
  debug:
    msg: "{{ ansible_arch }}"

# krew: https://krew.sigs.k8s.io/docs/user-guide/setup/install/
- name: "krew - check installed"
  shell: "kubectl krew version 2>&1 | grep {{ args.version }}"
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    PATH: "{{ ansible_home }}/.krew/bin:{{ ansible_env.PATH }}"
  register: krew_exists
  changed_when: false
  ignore_errors: yes

- name: "krew - tmp directory"
  file:
    path: "/tmp/krew"
    state: directory
  when: krew_exists is failed

- name: "krew - download"
  get_url:
    url: "https://github.com/kubernetes-sigs/krew/releases/download/v{{ args.version }}/krew.tar.gz"
    dest: "/tmp/krew/krew.tar.gz"
  when: krew_exists is failed

- name: "krew - unarchive"
  unarchive:
    src: "/tmp/krew/krew.tar.gz"
    dest: /tmp/krew
    remote_src: yes
  when: krew_exists is failed

- name: "krew - install"
  shell: /tmp/krew/krew-{{ ansible_os }}_{{ ansible_arch }} install
  when: krew_exists is failed

- name: "krew - startup profile.d script"
  become: yes
  blockinfile:
    create: yes
    path: /etc/profile.d/profile_ansible_init_krew.sh
    block: |
      if [[ -d "$HOME/.krew" ]]; then
        export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
      fi
