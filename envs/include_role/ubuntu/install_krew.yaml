# prepare
- name: "krew - get os"
  ansible.builtin.shell: set -o pipefail && uname | tr '[:upper:]' '[:lower:]'
  args:
    executable: /bin/bash
  register: os_value
  changed_when: false
  check_mode: false

- name: "krew - get arch"
  ansible.builtin.shell: set -o pipefail && uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/'
  args:
    executable: /bin/bash
  register: arch_value
  changed_when: arch_value.rc != 0
  check_mode: false

- name: "krew - debug ansible_os"
  ansible.builtin.debug:
    msg: "{{ os_value.stdout }}"

- name: "krew - debug arch_value"
  ansible.builtin.debug:
    msg: "{{ arch_value.stdout }}"

# krew: https://krew.sigs.k8s.io/docs/user-guide/setup/install/
- name: "krew - check installed"
  ansible.builtin.shell: "set -o pipefail && kubectl krew version | grep {{ krew.version }}"
  args:
    executable: /bin/bash
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    PATH: "{{ ansible_home }}/.asdf/shims:{{ ansible_home }}/.asdf/bin:{{ ansible_home }}/.krew/bin:{{ ansible_env.PATH }}"
  register: krew_exists
  changed_when: false
  ignore_errors: true

- name: "krew - tmp directory"
  ansible.builtin.file:
    path: "/tmp/krew"
    state: directory
    mode: "0755"
  when: krew_exists is failed

- name: "krew - download"
  ansible.builtin.get_url:
    url: "https://github.com/kubernetes-sigs/krew/releases/download/v{{ krew.version }}/krew-linux_amd64.tar.gz"
    dest: "/tmp/krew/krew.tar.gz"
    mode: "0755"
  when: krew_exists is failed

- name: "krew - unarchive"
  ansible.builtin.unarchive:
    src: "/tmp/krew/krew.tar.gz"
    dest: /tmp/krew
    remote_src: true
  when: krew_exists is failed

- name: "krew - install"
  ansible.builtin.command: /tmp/krew/krew-{{ os_value.stdout }}_{{ arch_value.stdout }} install krew
  register: krew_install
  changed_when: krew_install.rc != 0
  when: krew_exists is failed

- name: "krew - upgrade"
  ansible.builtin.command: /tmp/krew/krew-{{ os_value.stdout }}_{{ arch_value.stdout }} upgrade krew
  register: krew_upgrade
  failed_when: "'the newest version is already installed' not in krew_upgrade.stderr"
  changed_when: krew_upgrade.rc == "0"
  when: krew_exists

- name: "krew - startup profile.d script"
  become: true
  ansible.builtin.blockinfile:
    create: true
    path: /etc/profile.d/profile_ansible_init_krew.sh
    block: |
      if [[ -d "$HOME/.krew" ]]; then
        export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
      fi
    mode: "0644"
