# docker
# see: https://docs.docker.com/engine/install/ubuntu/

# workaround for "Conflicting values set for option Signed-By"
# see: https://github.com/docker/for-linux/issues/1349
- name: "docker - delete conflicting package file"
  become: true
  ansible.builtin.file:
    path: "/etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list"
    state: absent

- name: "docker - make sure install prerequisites"
  become: true
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
    update_cache: true
  register: apt
  until: "apt is not failed"
  retries: 2 # wsl1 failed first apt on Ubuntu-22.04

- name: "docker - add official GPG key"
  become: true
  ansible.builtin.shell: |
    set -o pipefail && install -m 0755 -d /etc/apt/keyrings
    set -o pipefail && curl --connect-timeout 1 --max-time 10 --retry 5 --retry-delay 0 --retry-max-time 60 -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --yes --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    executable: /bin/bash
  register: docker_apt_key
  changed_when: docker_apt_key.rc != 0

- name: "docker - setup repository"
  become: true
  ansible.builtin.shell: |
    set -o pipefail && echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    executable: /bin/bash
  register: docker_apt_key
  changed_when: docker_apt_key.rc != 0

# note: remove old version when error occured: `sudo apt-get remove docker docker-engine docker.io containerd runc`
- name: "docker - install"
  become: true
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: true
  register: apt
  until: "apt is not failed"
  retries: 2 # wsl1 failed first apt on Ubuntu-22.04

# This configuration is for whom want run docker on Hyper-V backend, but using WSL2 docker isolated. If Docker Desktop use wsl2, then docker will be locate in wsl2's /usr/bin/docker.
# configure iptables to use legacy. see: https://github.com/WhitewaterFoundry/Pengwin/issues/485#issuecomment-518028465
- name: "docker - change iptables/ip6tables to use legacy"
  become: true
  ansible.builtin.shell: |
    set -o pipefail && update-alternatives --set iptables /usr/sbin/iptables-legacy
    set -o pipefail && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
  register: docker_ipv6
  changed_when: docker_ipv6.rc != 0
  when: (is_wsl2 == "1") and (docker.wsl2_isolated == "1")

# allow use docker without sudo
- name: "docker - allow use docker without sudo"
  become: true
  ansible.builtin.command: usermod -aG docker "{{ ansible_user_id }}"
  register: docker_sudo
  changed_when: docker_sudo.rc != 0
  when: (is_wsl2 == "1") and (docker.wsl2_isolated == "1")

# docker service daemon for SysV Init
- name: "docker - launch docker service on startup"
  become: true
  ansible.builtin.blockinfile:
    create: true
    path: /etc/profile.d/profile_ansible_init_docker.sh
    block: |
      sudo -S cgroupfs-mount
      sudo usermod -aG docker $USER
      sudo service docker start
    mode: "0644"
  when: docker.launch_docker_service == "1"

- name: "docker - use host windows docker daemon on startup"
  become: true
  ansible.builtin.blockinfile:
    create: true
    path: /etc/profile.d/profile_ansible_init_docker.sh
    block: |
      # wsl1 using windows docker-compose. wsl2 don't need this line.
      export DOCKER_HOST=tcp://localhost:2375
    mode: "0644"
  when: docker.launch_docker_service == "0"
