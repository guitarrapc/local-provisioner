# Install binary from homebrew (linuxbrew). This is useful when you are using homebrew for package manager.
# Unfortunately, homebrew is too slow.... may be remove in future. packages should not depends on brew.
#
# See below for an example of how to use this role.
# ```yaml
# homebrew:
#   - packages:
#       - { name: "hello", state: "present" }
#
# ```yaml
# - name: "Install homebrew"
#   ansible.builtin.include_tasks: ../include_role/ubuntu/install_homebrew.yaml
#   with_items: "{{ homebrew }}"
#   loop_control:
#     loop_var: args
# ```

- name: "homebrew - clone"
  ansible.builtin.git:
    repo: https://github.com/Homebrew/brew
    dest: "{{ ansible_home }}/github/Homebrew/brew"
    accept_hostkey: true

- name: "homebrew - mkdir {{ ansible_home }}/.linuxbrew/bin"
  ansible.builtin.file:
    path: "{{ ansible_home }}/.linuxbrew/bin"
    state: directory
    force: true

- name: "homebrew - create linuxbrew symlinks"
  ansible.builtin.file:
    src: "{{ ansible_home }}/github/Homebrew/brew/bin/brew"
    dest: "{{ ansible_home }}/.linuxbrew/bin/brew"
    state: link

- name: "homebrew - eval shellenv"
  ansible.builtin.command: eval $({{ ansible_home }}/.linuxbrew/bin/brew shellenv)
  register: homebrew_eval
  changed_when: homebrew_eval.rc != 0

- name: "homebrew - install tools"
  community.general.homebrew:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    update_homebrew: true
  with_items: "{{ args.packages }}"
  environment:
    # require re-login shell for 1st install, let's manual export shellenv and use it
    HOMEBREW_PREFIX: "{{ ansible_home }}/.linuxbrew"
    HOMEBREW_CELLAR: "{{ ansible_home }}/.linuxbrew/Cellar"
    HOMEBREW_REPOSITORY: "{{ ansible_home }}/github/Homebrew/brew"
    PATH: "{{ ansible_home }}/.linuxbrew/bin:{{ ansible_home }}/.linuxbrew/sbin::{{ ansible_env.PATH }}"
    MANPATH: "{{ ansible_home }}/.linuxbrew/share/man${MANPATH+:$MANPATH}:"
    INFOPATH: "{{ ansible_home }}/.linuxbrew/share/info:${INFOPATH:-}"
