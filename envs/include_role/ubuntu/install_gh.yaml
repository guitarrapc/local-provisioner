# TODO: moved to asdf. we can delete this.
# gh
# install to /opt/gh, then symlink to /usr/local/bin/gh.
- name: "gh - check already installed"
  ansible.builtin.shell: set -o pipefail && gh --version 2>&1 | head -n 1 | grep "{{ args.version }}"
  args:
    executable: /bin/bash
  register: gh_exists
  changed_when: false
  ignore_errors: true

- name: "gh - mkdir /opt/gh"
  become: true
  ansible.builtin.file:
    path: "/opt/gh"
    state: directory
    force: true
    mode: "0755"

- name: "gh - download"
  ansible.builtin.command: curl -L "https://github.com/cli/cli/releases/download/v{{ gh_cli.version }}/gh_{{ gh_cli.version }}_linux_amd64.tar.gz" -o /tmp/gh_{{ gh_cli.version }}_linux_amd64.tar.gz
  register: gh_download
  changed_when: gh_download.rc != 0
  when: gh_exists is failed

- name: "gh - unzip"
  become: true
  ansible.builtin.unarchive:
    src: /tmp/gh_{{ gh_cli.version }}_linux_amd64.tar.gz
    dest: /opt/gh/
    remote_src: true
    extra_opts:
      - --strip-components=1 # remove parent directory
  when: gh_exists is failed

- name: "gh - create symlinks"
  become: true
  ansible.builtin.file:
    src: "/opt/gh/bin/gh"
    dest: "/usr/local/bin/gh"
    state: link

- name: "gh - clean up tmp zip"
  ansible.builtin.file:
    path: /tmp/gh.tar.gz
    state: absent
  when: gh_exists is failed

- name: "gh - check installed"
  ansible.builtin.shell: set -o pipefail && gh --version 2>&1 | head -n 1 | grep "{{ args.version }}"
  args:
    executable: /bin/bash
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  changed_when: false
  when: gh_exists is failed
