# docker
# wsl2 but docker install version
- name: "docker - make sure install prerequisites"
  become: true
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    update_cache: true

- name: "docker - import Docker apt key"
  become: true
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  args:
    warn: false
  changed_when: false

- name: "docker - add repo for Ubuntu"
  become: true
  apt_repository:
    # $(lsb_release -cs) = {{ ansible_distribution_release }}
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
    update_cache: true

# note: remove old version when error occured: `sudo apt-get remove docker docker-engine docker.io containerd runc`
- name: "docker - install"
  become: true
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - cgroupfs-mount
    update_cache: true

# configure iptables to use legacy. see: https://github.com/WhitewaterFoundry/Pengwin/issues/485#issuecomment-518028465
- name: "docker - change iptables/ip6tables to use legacy"
  become: true
  shell: |
    update-alternatives --set iptables /usr/sbin/iptables-legacy
    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
  changed_when: false

# allow use docker without sudo
- name: "docker - change iptables/ip6tables to use legacy"
  become: true
  shell: usermod -aG docker "{{ ansible_user_id }}"
  changed_when: false

# docker service daemon for SysV Init
- name: "docker - startup profile.d script (wsl2)"
  become: true
  blockinfile:
    create: true
    path: /etc/profile.d/profile_ansible_init_docker.sh
    block: |
      sudo -S cgroupfs-mount
      sudo usermod -aG docker $USER
      sudo service docker start
  when: args.require_sysvinit == "1"
