---
# prerequisites
- name: add systemd prerequisite packages
  become: yes
  apt:
    pkg: "{{ systemd_prerequisite_packages }}"
    update_cache: yes

# scripts
- name: generate start-systemd-namespace script
  become: yes
  file:
    path: "/usr/sbin/start-systemd-namespace"
    mode: a+x

- name: contents start-systemd-namespace script
  become: yes
  copy:
    dest: "/usr/sbin/start-systemd-namespace"
    content: |
      #!/bin/bash

      SYSTEMD_PID=$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')
      if [ -z "$SYSTEMD_PID" ] || [ "$SYSTEMD_PID" != "1" ]; then
          export PRE_NAMESPACE_PATH="$PATH"
          (set -o posix; set) | \
              grep -v "^BASH" | \
              grep -v "^DIRSTACK=" | \
              grep -v "^EUID=" | \
              grep -v "^GROUPS=" | \
              grep -v "^HOME=" | \
              grep -v "^HOSTNAME=" | \
              grep -v "^HOSTTYPE=" | \
              grep -v "^IFS='.*"$'\n'"'" | \
              grep -v "^LANG=" | \
              grep -v "^LOGNAME=" | \
              grep -v "^MACHTYPE=" | \
              grep -v "^NAME=" | \
              grep -v "^OPTERR=" | \
              grep -v "^OPTIND=" | \
              grep -v "^OSTYPE=" | \
              grep -v "^PIPESTATUS=" | \
              grep -v "^POSIXLY_CORRECT=" | \
              grep -v "^PPID=" | \
              grep -v "^PS1=" | \
              grep -v "^PS4=" | \
              grep -v "^SHELL=" | \
              grep -v "^SHELLOPTS=" | \
              grep -v "^SHLVL=" | \
              grep -v "^SYSTEMD_PID=" | \
              grep -v "^UID=" | \
              grep -v "^USER=" | \
              grep -v "^_=" | \
              cat - > "$HOME/.systemd-env"
          echo "PATH='$PATH'" >> "$HOME/.systemd-env"
          exec sudo /usr/sbin/enter-systemd-namespace "$BASH_EXECUTION_STRING"
      fi
      if [ -n "$PRE_NAMESPACE_PATH" ]; then
          export PATH="$PRE_NAMESPACE_PATH"
      fi

- name: generate enter-systemd-namespace script
  become: yes
  file:
    path: "/usr/sbin/enter-systemd-namespace"
    mode: a+x

- name: contents enter-systemd-namespace script
  become: yes
  copy:
    dest: "/usr/sbin/enter-systemd-namespace"
    content: |
      #!/bin/bash

      if [ "$UID" != 0 ]; then
          echo "You need to run $0 through sudo"
          exit 1
      fi

      SYSTEMD_PID="$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')"
      if [ -z "$SYSTEMD_PID" ]; then
          /usr/bin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target
          while [ -z "$SYSTEMD_PID" ]; do
              SYSTEMD_PID="$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '{print $2}')"
          done
      fi

      if [ -n "$SYSTEMD_PID" ] && [ "$SYSTEMD_PID" != "1" ]; then
          if [ -n "$1" ] && [ "$1" != "bash --login" ] && [ "$1" != "/bin/bash --login" ]; then
              exec /usr/bin/nsenter -t "$SYSTEMD_PID" -a \
                  /usr/bin/sudo -H -u "$SUDO_USER" \
                  /bin/bash -c 'set -a; source "/home/$SUDO_USER/.systemd-env"; set +a; exec bash -c '"$(printf "%q" "$@")"
          else
              exec /usr/bin/nsenter -t "$SYSTEMD_PID" -a \
                  /bin/login -p -f "$SUDO_USER" \
                  $(/bin/cat "/home/$SUDO_USER/.systemd-env" | grep -v "^PATH=")
          fi
          echo "Existential crisis"
      fi

- name: sudoers config for systemd
  become: yes
  blockinfile:
    path: "/etc/sudoers"
    block: |
      Defaults        env_keep += WSLPATH
      Defaults        env_keep += WSLENV
      Defaults        env_keep += WSL_INTEROP
      Defaults        env_keep += WSL_DISTRO_NAME
      Defaults        env_keep += PRE_NAMESPACE_PATH
      %sudo ALL=(ALL) NOPASSWD: /usr/sbin/enter-systemd-namespace

- name: source enter-systemd-namespace in /etc/bash.bashrc
  become: yes
  blockinfile:
    path: "/etc/bash.bashrc"
    insertafter: "System-wide"
    block: |
      # Start or enter a PID namespace in WSL2
      source /usr/sbin/start-systemd-namespace
