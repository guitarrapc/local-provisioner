---
# install minikube
# https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/#minikube-kubernetes-from-everywhere
- name: "minikube - check installed"
  shell: minikube version | grep {{ minikube_version }}
  register: minikube_exists
  changed_when: false
  ignore_errors: yes
  when: (use_minikube == "1") and (is_wsl2 == "1")

- name: "minkube - download"
  become: yes
  shell: curl -Ls "https://storage.googleapis.com/minikube/releases/{{ minikube_version }}/minikube-linux-amd64" -o /usr/local/bin/minikube
  when: (use_minikube == "1") and (is_wsl2 == "1") and (minikube_exists is failed)

- name: "minikube - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/minikube
    mode: "0755"
  when: (use_minikube == "1") and (is_wsl2 == "1") and (minikube_exists is failed)

- name: "minikube - generate systemd service"
  become: yes
  copy:
    dest: /etc/systemd/system/minikube.service
    content: |
      [Unit]
      Description=Runs minikube on startup
      After=docker.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/usr/local/bin/minikube start --vm-driver=docker --addons ingress --kubernetes-version v1.18.0
      ExecStop=/usr/local/bin/minikube stop
      User={{ ansible_user_id }}
      Group={{ ansible_user_id }}

      [Install]
      WantedBy=multi-user.target
  when: (use_minikube == "1") and (is_wsl2 == "1")

- name: "minikube - enable minikube.service (systemd)"
  become: yes
  systemd:
    name: minikube.service
    enabled: yes
  when: (use_minikube == "1") and (is_wsl2 == "1")

- name: "minikube - startup profile.d script (wsl2 systemd)"
  become: yes
  blockinfile:
    create: yes
    path: /etc/profile.d/profile_ansible_init_minikube.sh
    block: |
      sudo systemctl start minikube > /dev/null 2>&1
      eval $(minikube docker-env)
  when: (use_minikube == "1") and (is_wsl2 == "1")

# kubectl
- name: "Install kubectl"
  include: include_role/install_kubectl.yaml
  with_items: "{{ kubectl }}"
  loop_control:
    loop_var: args

# helm3
- name: "Install helm"
  include: include_role/install_helm.yaml
  with_items: "{{ helm }}"
  loop_control:
    loop_var: args

# kubectx
- name: "Install kubectx"
  include: include_role/install_kubectx.yaml

# kube-ps1
- name: "kube-ps1 - clone"
  become: yes
  git:
    repo: https://github.com/jonmosco/kube-ps1.git
    dest: "{{ ansible_home}}/github/kube-ps1"
    accept_hostkey: yes

# stern
- name: "Install stern"
  include: include_role/install_stern.yaml
  with_items: "{{ stern }}"
  loop_control:
    loop_var: args

# kubergrunt
- name: "kubegrunt - check kubergrunt installed"
  shell: kubergrunt --version | grep {{ kubergrunt_version }}
  register: kubergrunt_exists
  changed_when: false
  ignore_errors: yes

- name: "kubergrunt - download"
  become: yes
  get_url:
    url: https://github.com/gruntwork-io/kubergrunt/releases/download/v{{ kubergrunt_version }}/kubergrunt_linux_amd64
    dest: "/usr/local/bin/kubergrunt"
  register: download_kubergrunt
  when: kubergrunt_exists is failed

- name: "kubegrunt - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/kubergrunt
    mode: "0755"

# istioctl
- name: "istioctl - check installed"
  shell: istioctl version | grep {{ istioctl_version }}
  register: istioctl_exists
  changed_when: false
  ignore_errors: yes

- name: "istioctl - download"
  get_url:
    url: https://git.io/getLatestIstio
    dest: "{{ ansible_home }}/istio_install.sh"
  register: download_istioctl
  when: istioctl_exists is failed

- name: "istioctl - install sh"
  shell: ISTIO_VERSION={{ istioctl_version }} . ./istio_install.sh
  args:
    chdir: "{{ ansible_home }}/"
  when:
    - istioctl_exists is failed
    - download_istioctl is succeeded
  changed_when: false

- name: "istioctl - copy"
  become: yes
  copy:
    src: "{{ ansible_home }}/istio-{{ istioctl_version }}/bin/istioctl"
    dest: /usr/local/bin
  when:
    - istioctl_exists is failed
    - download_istioctl is succeeded

- name: "istio - remove dir"
  file:
    state: absent
    path: "{{ ansible_home }}/istio-{{ istioctl_version }}/"
  when:
    - istioctl_exists is failed
    - download_istioctl is succeeded

- name: "istioctl - remove sh"
  file:
    state: absent
    path: "{{ ansible_home }}/istio_install.sh"
  when:
    - istioctl_exists is failed
    - download_istioctl is succeeded

- name: "istioctl - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/istioctl
    mode: "0755"
  when:
    - istioctl_exists is failed
    - download_istioctl is succeeded

# kubesec
- name: "kubesec - check installed"
  shell: kubesec --version | grep {{ kubesec_version }}
  register: kubesec_exists
  changed_when: false
  ignore_errors: yes

- name: "kubesec - download"
  become: yes
  get_url:
    url: https://github.com/shyiko/kubesec/releases/download/{{ kubesec_version }}/kubesec-{{ kubesec_version }}-linux-amd64
    dest: "/usr/local/bin/kubesec"
  register: download_kubesec
  when: kubesec_exists is failed

- name: "kubesec - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/kubesec
    mode: "a+x"
  when: download_kubesec is succeeded

# kubeval
- name: "kubeval - check installed"
  shell: kubeval --version | grep {{ kubeval_version }}
  register: kubeval_exists
  changed_when: false
  ignore_errors: yes

- name: "kubeval - download"
  get_url:
    url: https://github.com/instrumenta/kubeval/releases/download/{{ kubeval_version }}/kubeval-linux-amd64.tar.gz
    dest: "{{ ansible_home }}/kubeval.tar.gz"
  register: download_kubeval
  when: kubeval_exists is failed

- name: "kubeval - unarchive"
  command: tar -zxvf "{{ ansible_home }}/kubeval.tar.gz"
  args:
    chdir: "{{ ansible_home }}/"
  register: unarchive_kubeval
  when: kubeval_exists is failed

- name: "kubeval - copy"
  become: yes
  copy:
    src: "{{ ansible_home }}/kubeval"
    dest: /usr/local/bin/kubeval
  when: kubeval_exists is failed

- name: "kubeval - remove files"
  file:
    state: absent
    path: "{{ ansible_home }}/{{ item }}"
  with_items:
    - kubeval.tar.gz
    - LICENSE
    - README.md
    - kubeval
  when: kubeval_exists is failed

- name: "kubeval - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/kubeval
    mode: "0755"
  when: kubeval_exists is failed

# mozilla/sops
- name: "sops - check installed"
  shell: sops --version | grep {{ sops_version }}
  register: sops_exists
  changed_when: false
  ignore_errors: yes

- name: "sops - download"
  become: yes
  get_url:
    url: https://github.com/mozilla/sops/releases/download/v{{ sops_version }}/sops-v{{ sops_version }}.linux
    dest: "/usr/local/bin/sops"
  register: download_sops
  when: sops_exists is failed

- name: "sops - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/sops
    mode: "0755"
  when: sops_exists is failed

# argocd
- name: "argocd - check installed"
  shell: argocd version | grep {{ argocd_version }}
  register: argocd_exists
  changed_when: false
  ignore_errors: yes

- name: "argocd - download"
  become: yes
  get_url:
    url: https://github.com/argoproj/argo-cd/releases/download/v{{ argocd_version }}/argocd-linux-amd64
    dest: "/usr/local/bin/argocd"
  register: download_argocd
  when: argocd_exists is failed

- name: "argocd - change file permissions"
  become: yes
  file:
    path: /usr/local/bin/argocd
    mode: "0755"
  when: argocd_exists is failed
