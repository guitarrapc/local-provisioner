- name: "apt - Install tools"
  become: true
  ansible.builtin.apt:
    pkg: "{{ apts }}"
    update_cache: true
  register: apt_result
  until: "apt_result is not failed"
  retries: 2 # wsl1 failed first apt on Ubuntu-22.04
  when: feature_enabed.apts == "true"

- name: "pip3 - Install pip3 packages"
  ansible.builtin.pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
  with_items: "{{ pip3 }}"
  when: feature_enabed.pip3 == "true"

- name: "git - Install git cli"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_git.yaml
  when: feature_enabed.git == "true"

- name: "binary - Install binary tools"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_binary.yaml
  with_items: "{{ binary }}"
  loop_control:
    loop_var: args
  when: feature_enabed.binary == "true"

- name: "binary archive - Install binary archive tools"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_binary_archive.yaml
  with_items: "{{ binary_archive }}"
  loop_control:
    loop_var: args
  when: feature_enabed.binary_archive == "true"

- name: "git clone - Install git tools"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_git_tool.yaml
  with_items: "{{ git_tools }}"
  loop_control:
    loop_var: args
  when: feature_enabed.git_tools == "true"

- name: "dpkg - Install tools"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_dpkg.yaml
  with_items: "{{ dpkg }}"
  loop_control:
    loop_var: args
  when: feature_enabed.dpkg == "true"

- name: "aqua - Install aqua global tools"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_aqua.yaml
  when: feature_enabed.aqua == "true"

- name: ".NET - Install dotnet"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_dotnet.yaml
  with_items: "{{ dotnet }}"
  loop_control:
    loop_var: args
  when: feature_enabed.dotnet == "true"

- name: "Go - Install go"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_go.yaml
  with_items: "{{ go }}"
  loop_control:
    loop_var: args
  when: feature_enabed.go == "true"

- name: "krew - Install krew"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_krew.yaml
  with_items: "{{ krew }}"
  loop_control:
    loop_var: args
  when: feature_enabed.krew == "true"

- name: "krew Plugins - Install krew plugins for kubectl"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_krew_plugin.yaml
  with_items: "{{ krew_plugins }}"
  loop_control:
    loop_var: args
  when: feature_enabed.krew == "true"

- name: "terraform - Install terraform"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_terraform.yaml
  with_items: "{{ terraform }}"
  loop_control:
    loop_var: args
  when: feature_enabed.terraform == "true"

# use .devcontainer instead. https://github.com/microsoft/vscode-dev-containers/blob/main/script-library/docs/azcli.md
# too slow download pacakge..... oh my package.microsoft.com ....
- name: "azure - Install azure cli"
  ansible.builtin.include_tasks: ../include_role/ubuntu/install_azurecli.yaml
  when: feature_enabed.azcli == "true"
