---
- name: install apt tools
  become: yes
  apt:
    pkg: "{{ apt_tools }}"
    update_cache: yes

# bombardier
- name: check bombardier installed
  shell: bombardier --version 2>&1 | head -n 1 | grep {{ bombardier_version }}
  register: bombardier_exists
  changed_when: false
  ignore_errors: yes

- name: download bombardier
  become: yes
  get_url:
    url: https://github.com/codesenberg/bombardier/releases/download/{{ bombardier_version }}/bombardier-linux-amd64
    dest: "/usr/local/bin/bombardier"
  register: download_bombardier
  when: bombardier_exists is failed

- name: chmod bombardier
  become: yes
  file:
    path: /usr/local/bin/bombardier
    mode: a+x

# dive
- name: check dive installed
  shell: dive --version 2>&1 | head -n 1 | grep {{ dive_version }}
  register: dive_exists
  changed_when: false
  ignore_errors: yes

- name: download dive deb
  get_url:
    url: https://github.com/wagoodman/dive/releases/download/v{{ dive_version }}/dive_{{ dive_version }}_linux_amd64.deb
    dest: "{{ ansible_home }}/dive"
  register: download_dive
  when: dive_exists is failed

- name: install dive
  become: yes
  apt:
    deb: "{{ ansible_home }}/dive"
  when: dive_exists is failed

- name: Remove the dive deb
  file:
    path: "{{ ansible_home }}/dive"
    state: absent
  when: dive_exists is failed

# ctop
- name: check ctop installed
  shell: ctop -v 2>&1 | head -n 1 | grep {{ ctop_version }}
  register: ctop_exists
  changed_when: false
  ignore_errors: yes

- name: download ctop
  become: yes
  shell: curl -Ls "https://github.com/bcicen/ctop/releases/download/v{{ ctop_version }}/ctop-{{ ctop_version }}-linux-amd64" -o /usr/local/bin/ctop
  when: ctop_exists is failed

- name: change ctop file permissions
  become: yes
  file:
    path: /usr/local/bin/ctop
    mode: "a+x"
  when: ctop_exists is failed

# grpcurl
- name: check grpcurl installed
  shell: grpcurl --version 2>&1 | head -n 1 | grep {{ grpcurl_version }}
  register: grpcurl_exists
  changed_when: false
  ignore_errors: yes

- name: download grpcurl
  become: yes
  get_url:
    url: https://github.com/fullstorydev/grpcurl/releases/download/v{{ grpcurl_version }}/grpcurl_{{ grpcurl_version }}_linux_x86_64.tar.gz
    dest: "{{ ansible_home }}/grpcurl.tar.gz"
  when: grpcurl_exists is failed

- name: unarchive grpcurl
  command: tar -zxvf "{{ ansible_home }}/grpcurl.tar.gz"
  args:
    chdir: "{{ ansible_home }}/"
  register: unarchive_grpcurl
  when: grpcurl_exists is failed

- name: copy grpcurl
  become: yes
  copy:
    src: "{{ ansible_home }}/grpcurl"
    dest: /usr/local/bin/grpcurl
  when: grpcurl_exists is failed

- name: remove grpcurl files
  file:
    state: absent
    path: "{{ ansible_home }}/{{ item }}"
  with_items:
    - grpcurl.tar.gz
    - LICENSE
    - grpcurl
  when: grpcurl_exists is failed

- name: change file permissions
  become: yes
  file:
    path: /usr/local/bin/grpcurl
    mode: "0755"
  when: grpcurl_exists is failed

# cert
- name: check cert installed
  shell: cert -v 2>&1 | head -n 1 | grep {{ cert_version }}
  register: cert_exists
  changed_when: false
  ignore_errors: yes

- name: download cert
  become: yes
  get_url:
    url: https://github.com/genkiroid/cert/releases/download/0.15.0/cert_{{ cert_version }}_linux_64bit.tar.gz
    dest: "{{ ansible_home }}/cert.tar.gz"
  when: cert_exists is failed

- name: unarchive cert
  command: tar -zxvf "{{ ansible_home }}/cert.tar.gz"
  args:
    chdir: "{{ ansible_home }}/"
  register: unarchive_cert
  when: cert_exists is failed

- name: copy cert
  become: yes
  copy:
    src: "{{ ansible_home }}/cert"
    dest: /usr/local/bin/cert
  when: cert_exists is failed

- name: remove cert files
  file:
    state: absent
    path: "{{ ansible_home }}/{{ item }}"
  with_items:
    - cert.tar.gz
    - README.md
    - cert
  when: cert_exists is failed

- name: change file permissions
  become: yes
  file:
    path: /usr/local/bin/cert
    mode: "0755"
  when: cert_exists is failed

# getenvoy
- name: check getenvoy installed
  shell: getenvoy --version 2>&1 | head -n 1 | grep {{ getenvoy_version }}
  register: getenvoy_exists
  changed_when: false
  ignore_errors: yes

- name: download getenvoy
  become: yes
  shell: curl -L https://getenvoy.io/cli | bash -s -- -b /usr/local/bin
  when: getenvoy_exists is failed
