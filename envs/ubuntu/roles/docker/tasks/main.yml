---
- name: make sure docker prerequisites are supported by apt
  become: yes
  apt:
    pkg: "{{ docker_prerequisites }}"
    update_cache: yes

# - name: import Docker apt key
#   become: yes
#   apt_key:
#     url: "https://download.docker.com/linux/ubuntu/gpg"
#     state: present

- name: import Docker apt key
  become: yes
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  warn: false

- name: add repo for Ubuntu
  become: yes
  apt_repository:
    # $(lsb_release -cs) = {{ ansible_distribution_release }}
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
    update_cache: yes

# remove old version when error occurd: `sudo apt-get remove docker docker-engine docker.io containerd runc`
- name: install docker
  become: yes
  apt:
    pkg: "{{ docker_pkgs }}"
    update_cache: yes

- name: check docker-compose exists
  stat:
    path: /usr/local/bin/docker-compose
    get_checksum: false
    get_md5: false
  register: dockercompose_exists

- name: download docker-compose
  become: yes
  shell: curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  warn: false
  when: not dockercompose_exists.stat.exists

- name: chmod docker-compose
  become: yes
  file:
    path: /usr/local/bin/docker-compose
    mode: a+x

- name: docker startup profile.d script
  become: yes
  blockinfile:
    create: yes
    path: /etc/profile.d/profle_ansible_init_docker.sh
    block: |
      sudo -S cgroupfs-mount
      sudo usermod -aG docker $USER
      sudo service docker start
      # wsl1 using windows docker-compose. wsl2 don't need this line.
      export DOCKER_HOST=tcp://localhost:2375
